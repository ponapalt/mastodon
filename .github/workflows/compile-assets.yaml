name: Compile Mastodon Assets

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 手動実行も可能に

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      # 必要な依存パッケージをインストール
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            imagemagick ffmpeg libvips-tools libpq-dev libxml2-dev libxslt1-dev file git-core \
            g++ libprotobuf-dev protobuf-compiler pkg-config gcc autoconf \
            bison build-essential libssl-dev libyaml-dev libreadline6-dev \
            zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev \
            nginx nodejs redis-server redis-tools postgresql postgresql-contrib \
            certbot python3-certbot-nginx libidn11-dev libicu-dev libjemalloc-dev
      
      # Corepackを事前に有効化（Node.jsセットアップ前）
      - name: Enable Corepack
        run: |
          corepack enable
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      
      # 指定されたYarnバージョンを準備
      - name: Prepare Yarn version
        run: |
          corepack prepare yarn@stable --activate
          yarn --version
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      
      - name: Install dependencies
        run: |
          bundle install
          yarn install
      
      # GitHub Secretsから環境変数を設定してアセットコンパイル
      - name: Compile assets
        env:
          RAILS_ENV: production
          NODE_ENV: production
          OTP_SECRET: ${{ secrets.OTP_SECRET }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
          ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY }}
          ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY }}
          ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT }}
        run: |
          bundle exec rails assets:precompile
          tar -czf compiled-assets.tar.gz public/packs
      
      # FTPアップロード用の一時ディレクトリを作成
      - name: Prepare upload directory
        run: |
          mkdir -p upload-temp
          cp compiled-assets.tar.gz upload-temp/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mastodon-assets
          path: compiled-assets.tar.gz
          retention-days: 7
      
      # FTPでshillest.netにアップロード - 一時ディレクトリを使用
      - name: Upload to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: shillest.net
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./upload-temp/
          server-dir: /bugtraq/ukadon/
          dangerous-clean-slate: false